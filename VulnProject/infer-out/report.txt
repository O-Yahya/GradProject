#0
main.c:11: error: Null Dereference
  pointer `ptr` last assigned on line 10 could be null and is dereferenced by call to `is_valid()` at line 11, column 9.
   9. 
  10.     char *ptr = NULL;
  11.     if (is_valid(ptr)) { // Null pointer dereference vulnerability
              ^
  12.         printf("This is never reached\n");
  13.     }

#1
utility.c:8: error: Null Dereference
  pointer `ptr` last assigned on line 6 could be null and is dereferenced at line 8, column 5.
   6.     int* ptr = (int*)malloc(sizeof(int));
   7.     free(ptr);
   8.     *ptr = 10; // Use after free vulnerability
          ^
   9. }

#2
error.c:14: error: Null Dereference
  pointer `ptr` last assigned on line 13 could be null and is dereferenced by call to `strcmp()` at line 14, column 9.
  12. void nullPointerDereference() {
  13.     char *ptr = NULL;
  14.     if (strcmp(ptr, "test") == 0) { // Null pointer dereference
              ^
  15.         printf("This is never reached\n");
  16.     }

#3
error.c:22: error: Dead Store
  The value written to &v (type int) is never used.
  20. void resourceLeak() {
  21.     int x = 5;
  22.     int v = 7;
          ^
  23.     FILE *file = fopen("test.txt", "r");
  24.     if (file == NULL) {

#4
error.c:21: error: Dead Store
  The value written to &x (type int) is never used.
  19. // Function to demonstrate resource leak vulnerability
  20. void resourceLeak() {
  21.     int x = 5;
          ^
  22.     int v = 7;
  23.     FILE *file = fopen("test.txt", "r");

#5
error.c:24: error: Resource Leak
  resource of type `_IO_FILE` acquired by call to `fopen()` at line 23, column 18 is not released after line 24, column 5.
  22.     int v = 7;
  23.     FILE *file = fopen("test.txt", "r");
  24.     if (file == NULL) {
          ^
  25.         printf("Failed to open file\n");
  26.         return;

Found 6 issues
          Issue Type(ISSUED_TYPE_ID): #
  Null Dereference(NULL_DEREFERENCE): 3
              Dead Store(DEAD_STORE): 2
        Resource Leak(RESOURCE_LEAK): 1
